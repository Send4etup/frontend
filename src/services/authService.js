import api from './api';
import { authenticateUser } from './backendAdapter';

/**
 * –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ Telegram - —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Å –±—ç–∫–µ–Ω–¥–æ–º
 */
export const telegramAuth = async (telegramData = {}) => {
    try {
        const response = await api.post('/api/auth/telegram', {
            telegram_id: telegramData.telegram_id || null,
            first_name: telegramData.first_name || null,
            last_name: telegramData.last_name || null,
            username: telegramData.username || null,
            initData: telegramData.initData || null
        });

        if (response.data.token) {
            localStorage.setItem('token', response.data.token);
            localStorage.setItem('user', JSON.stringify(response.data.user));
        }

        return response.data;
    } catch (error) {
        console.error('Auth failed:', error);
        throw error;
    }
};

/**
 * –ü—Ä–æ—Å—Ç–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è (—Å–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
 */
export const simpleAuth = async () => {
    try {
        // –ü—Ä–æ–±—É–µ–º –Ω–æ–≤—ã–π –±—ç–∫–µ–Ω–¥
        const result = await authenticateUser();

        if (result.success) {
            console.log('üîê Auth via backend successful');
            return result;
        }

        // FALLBACK: —Å—Ç–∞—Ä–∞—è –ª–æ–≥–∏–∫–∞
        console.log('üîê Using fallback auth');
        // –ó–¥–µ—Å—å –æ—Å—Ç–∞–≤–ª—è–µ–º –°–¢–ê–†–´–ô –∫–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏

    } catch (error) {
        console.error('üîê Auth error:', error);
        // FALLBACK: —Å–æ–∑–¥–∞–µ–º mock –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ —Ä–∞–Ω—å—à–µ
    }
};

/**
 * –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
 */
export const logout = () => {
    localStorage.removeItem('token');
    localStorage.removeItem('user');
    window.location.reload();
};

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ localStorage
 */
export const getCurrentUser = () => {
    try {
        return JSON.parse(localStorage.getItem('user'));
    } catch {
        return null;
    }
};

// –î–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å–æ —Å—Ç–∞—Ä—ã–º –∫–æ–¥–æ–º
export const checkTelegramAuth = simpleAuth;
