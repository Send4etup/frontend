import React, { useState, useEffect } from 'react';
import { Camera, Headphones, Image, FileText, Brain, Send } from 'lucide-react';
import { motion } from 'framer-motion';
import { useNavigate } from 'react-router-dom';
import ProgressBar from '../../components/ProgressBar/ProgressBar';
import LoadingSpinner from '../../components/LoadingSpinner/LoadingSpinner';
import { getChatHistory, sendMessage } from '../../services/educationService';
import { pageTransition, itemAnimation } from '../../utils/animations';
import './HomePage.css';
import RecentChats from "../../components/RecentChats/RecentChats.jsx";

const HomePage = ({ user }) => {
    const navigate = useNavigate();
    const [inputValue, setInputValue] = useState('');
    const [chatHistory, setChatHistory] = useState([]);
    const [isLoading, setIsLoading] = useState(false);

    useEffect(() => {
        loadChatHistory();
    }, []);

    const loadChatHistory = async () => {
        setIsLoading(true);
        try {
            const history = await getChatHistory();
            setChatHistory(history);
        } catch (error) {
            console.error('Failed to load chat history:', error);
        } finally {
            setIsLoading(false);
        }
    };

    const handleSendMessage = async () => {
        if (!inputValue.trim()) return;

        try {
            // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —á–∞—Ç –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π
            const chatId = Date.now(); // –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ
            await sendMessage(inputValue);
            setInputValue('');

            // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —á–∞—Ç
            navigate(`/chat/${chatId}`, {
                state: { initialMessage: inputValue }
            });
        } catch (error) {
            console.error('Failed to send message:', error);
        }
    };

    const quickActions = [
        {
            icon: Image,
            label: '–°–æ–∑–¥–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
            action: 'create_image',
            description: `üé® **–°–æ–∑–¥–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –ø–æ–º–æ—â—å—é –ò–ò**

–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–æ–∑–¥–∞—Ç—å –ª—é–±–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ —Ç–≤–æ–µ–º—É –æ–ø–∏—Å–∞–Ω–∏—é!

üñºÔ∏è **–ß—Ç–æ —è —É–º–µ—é:**
‚Ä¢ –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫–∏ –ø–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–º—É –æ–ø–∏—Å–∞–Ω–∏—é
‚Ä¢ –°–æ–∑–¥–∞–≤–∞—Ç—å –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π
‚Ä¢ –†–∏—Å–æ–≤–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π, –ø–µ–π–∑–∞–∂–∏, –æ–±—ä–µ–∫—Ç—ã
‚Ä¢ –î–µ–ª–∞—Ç—å –ª–æ–≥–æ—Ç–∏–ø—ã –∏ –¥–∏–∑–∞–π–Ω-—ç–ª–µ–º–µ–Ω—Ç—ã

‚ú® **–°—Ç–∏–ª–∏ –∏ —Ñ–æ—Ä–º–∞—Ç—ã:**
‚Ä¢ –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
‚Ä¢ –ú—É–ª—å—Ç—è—à–Ω—ã–π –∏ –∞–Ω–∏–º–µ —Å—Ç–∏–ª—å
‚Ä¢ –•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∫–∞—Ä—Ç–∏–Ω—ã
‚Ä¢ –°—Ö–µ–º—ã –∏ –¥–∏–∞–≥—Ä–∞–º–º—ã
‚Ä¢ –ö–æ–Ω—Ü–µ–ø—Ç-–∞—Ä—Ç

**–ü—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —É–≤–∏–¥–µ—Ç—å, –∏ —è —Å–æ–∑–¥–∞–º —ç—Ç–æ –¥–ª—è —Ç–µ–±—è! üöÄ**`
        },
        {
            icon: FileText,
            label: '–ö–æ–¥–∏–Ω–≥',
            action: 'coding',
            description: `üíª **–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞**

–¢–≤–æ–π –ª–∏—á–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫-–ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!

‚ö° **–Ø–∑—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è:**
‚Ä¢ Python, JavaScript, Java, C++, C#
‚Ä¢ HTML, CSS, React, Vue.js, Node.js
‚Ä¢ SQL, PHP, Swift, Kotlin
‚Ä¢ –ò –º–Ω–æ–≥–∏–µ –¥—Ä—É–≥–∏–µ!

üõ†Ô∏è **–ß—Ç–æ —è –¥–µ–ª–∞—é:**
‚Ä¢ –ü–∏—à—É –∫–æ–¥ –ø–æ–¥ —Ç–≤–æ–∏ –∑–∞–¥–∞—á–∏
‚Ä¢ –û–±—ä—è—Å–Ω—è—é —Å–ª–æ–∂–Ω—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è
‚Ä¢ –ü–æ–º–æ–≥–∞—é —Å –æ—Ç–ª–∞–¥–∫–æ–π –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –æ—à–∏–±–æ–∫
‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∏—Ä—É—é —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥
‚Ä¢ –°–æ–∑–¥–∞—é –∞–ª–≥–æ—Ä–∏—Ç–º—ã –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö

üéØ **–ü—Ä–æ–µ–∫—Ç—ã:**
‚Ä¢ –í–µ–±-—Å–∞–π—Ç—ã –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
‚Ä¢ –ò–≥—Ä—ã –∏ –∞–Ω–∏–º–∞—Ü–∏–∏
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∑–∞–¥–∞—á
‚Ä¢ –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö
‚Ä¢ –ú–æ–±–∏–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

**–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–≤–æ–µ–º –ø—Ä–æ–µ–∫—Ç–µ - –Ω–∞—á–Ω—ë–º –∫–æ–¥–∏—Ç—å! üî•**`
        },
        {
            icon: Brain,
            label: '–ë—Ä–µ–π–Ω—à—Ç–æ—Ä–º',
            action: 'brainstorm',
            description: `üß† **–ú–æ–∑–≥–æ–≤–æ–π —à—Ç—É—Ä–º –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–¥–µ–π**

–î–∞–≤–∞–π—Ç–µ –≤–º–µ—Å—Ç–µ –ø—Ä–∏–¥—É–º–∞–µ–º —á—Ç–æ-—Ç–æ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ–µ!

üí° **–û–±–ª–∞—Å—Ç–∏ –¥–ª—è –∏–¥–µ–π:**
‚Ä¢ –¢–≤–æ—Ä—á–µ—Å–∫–∏–µ –ø—Ä–æ–µ–∫—Ç—ã –∏ —Ö–æ–±–±–∏
‚Ä¢ –ë–∏–∑–Ω–µ—Å-–∏–¥–µ–∏ –∏ —Å—Ç–∞—Ä—Ç–∞–ø—ã
‚Ä¢ –†–µ—à–µ–Ω–∏—è —É—á–µ–±–Ω—ã—Ö –∑–∞–¥–∞—á
‚Ä¢ –ü–ª–∞–Ω—ã –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã–µ –∏ –∫–∞–Ω–∏–∫—É–ª—ã
‚Ä¢ –ü–æ–¥–∞—Ä–∫–∏ –∏ —Å—é—Ä–ø—Ä–∏–∑—ã

üöÄ **–ú–µ—Ç–æ–¥—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:**
‚Ä¢ –ê—Å—Å–æ—Ü–∏–∞—Ç–∏–≤–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ
‚Ä¢ –ú–µ—Ç–æ–¥ "—á—Ç–æ –µ—Å–ª–∏?"
‚Ä¢ –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–Ω—ã—Ö –∫–æ–Ω—Ü–µ–ø—Ü–∏–π
‚Ä¢ –ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
‚Ä¢ –ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏

üé® **–¢–∏–ø—ã –ø—Ä–æ–µ–∫—Ç–æ–≤:**
‚Ä¢ YouTube-–∫–∞–Ω–∞–ª –∏–ª–∏ –±–ª–æ–≥
‚Ä¢ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–ª–∏ –∏–≥—Ä–∞
‚Ä¢ –ù–∞—É—á–Ω—ã–π –ø—Ä–æ–µ–∫—Ç
‚Ä¢ –¢–≤–æ—Ä—á–µ—Å–∫–∞—è —Ä–∞–±–æ—Ç–∞
‚Ä¢ –°–æ—Ü–∏–∞–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞

**–°–∫–∞–∂–∏ —Ç–µ–º—É - —É—Å—Ç—Ä–æ–∏–º –Ω–∞—Å—Ç–æ—è—â–∏–π –º–æ–∑–≥–æ–≤–æ–π —à—Ç—É—Ä–º! ‚ö°**`
        },
        {
            icon: Headphones,
            label: '–ü—Ä–∏–¥—É–º–∞—Ç—å –æ—Ç–º–∞–∑–∫—É',
            action: 'excuse',
            description: `üòÖ **–ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ –æ—Ç–º–∞–∑–∫–∏ –Ω–∞ –≤—Å–µ —Å–ª—É—á–∞–∏ –∂–∏–∑–Ω–∏**

–ò–Ω–æ–≥–¥–∞ –≤—Å–µ–º –Ω—É–∂–Ω–∞ —Ö–æ—Ä–æ—à–∞—è –æ—Ç–º–∞–∑–∫–∞ - –ø–æ–º–æ–≥—É –ø—Ä–∏–¥—É–º–∞—Ç—å!

üé≠ **–°–∏—Ç—É–∞—Ü–∏–∏:**
‚Ä¢ –ù–µ —Å–¥–µ–ª–∞–ª –¥–æ–º–∞—à–∫—É
‚Ä¢ –û–ø–æ–∑–¥–∞–ª –Ω–∞ —É—Ä–æ–∫/–≤—Å—Ç—Ä–µ—á—É
‚Ä¢ –ó–∞–±—ã–ª –ø—Ä–æ –≤–∞–∂–Ω–æ–µ –¥–µ–ª–æ
‚Ä¢ –ù–µ —Ö–æ—á–µ—à—å –∏–¥—Ç–∏ –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ
‚Ä¢ –ù—É–∂–Ω–æ –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –ø—Ä–æ–µ–∫—Ç

‚ú® **–¢–∏–ø—ã –æ—Ç–º–∞–∑–æ–∫:**
‚Ä¢ –ü—Ä–∞–≤–¥–æ–ø–æ–¥–æ–±–Ω—ã–µ –∏ –±–µ–∑–æ–±–∏–¥–Ω—ã–µ
‚Ä¢ –ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ –∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ
‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
‚Ä¢ –§–æ—Ä—Å-–º–∞–∂–æ—Ä–Ω—ã–µ –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞
‚Ä¢ –°–µ–º–µ–π–Ω—ã–µ –¥–µ–ª–∞

‚öñÔ∏è **–í–∞–∂–Ω–æ:**
‚Ä¢ –û—Ç–º–∞–∑–∫–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –±–µ–∑–≤—Ä–µ–¥–Ω—ã–º–∏
‚Ä¢ –ù–µ –≤—Ä–µ–¥–∏—Ç—å –æ—Ç–Ω–æ—à–µ–Ω–∏—è–º —Å –ª—é–¥—å–º–∏
‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å —á—É–≤—Å—Ç–≤–æ–º –º–µ—Ä—ã
‚Ä¢ –õ—É—á—à–µ —á–µ—Å—Ç–Ω–æ—Å—Ç—å, –Ω–æ –∏–Ω–æ–≥–¥–∞...

**–†–∞—Å—Å–∫–∞–∂–∏ —Å–∏—Ç—É–∞—Ü–∏—é - –ø—Ä–∏–¥—É–º–∞–µ–º –≤—ã—Ö–æ–¥! üòâ**`
        }
    ];

    const handleQuickAction = async (action) => {
        const actionData = quickActions.find(qa => qa.action === action);
        if (actionData) {
            const chatId = Date.now();
            navigate(`/chat/${chatId}`, {
                state: {
                    initialMessage: actionData.description,
                    actionType: action,
                    toolTitle: actionData.label,
                    isToolDescription: true
                }
            });
        }
    };

    const handleChatClick = (chatId) => {
        navigate(`/chat/${chatId}`);
    };

    return (
        <motion.div
            className="home-page"
            variants={pageTransition}
            initial="initial"
            animate="animate"
            exit="exit"
        >
            <div className="container">
                <motion.div
                    className="page-title"
                    variants={itemAnimation}
                >

                    <h1>–ß–µ–º —è –º–æ–≥—É —Ç–µ–±–µ —Å–µ–≥–æ–¥–Ω—è –ø–æ–º–æ—á—å?</h1>
                </motion.div>
                <motion.div
                    className="welcome-section"
                    variants={itemAnimation}
                >
                    <p className="quote">
                        –≠–º–æ—Ü–∏–∏, –æ–±—ã—á–Ω–æ, —á–µ—Ä–µ–∑ –∫–∞–∫–æ–µ-—Ç–æ –≤—Ä–µ–º—è –ø—Ä–æ—Ö–æ–¥—è—Ç, –Ω–æ —Ç–æ, —á—Ç–æ –æ–Ω–∏ —Å–¥–µ–ª–∞–ª–∏, –æ—Å—Ç–∞–µ—Ç—Å—è
                    </p>
                    <p className="quote-author">–í–µ–ª—å–≥–µ–ª—å–º –®–≤–µ–±–µ–ª—å</p>
                </motion.div>

                {/*<motion.div variants={itemAnimation}>*/}
                {/*    <ProgressBar*/}
                {/*        current={user?.current_points || 34}*/}
                {/*        total={100}*/}
                {/*        percentage={40}*/}
                {/*    />*/}
                {/*</motion.div>*/}

                <motion.div
                    className="input-section"
                    variants={itemAnimation}
                >
                    <div className="input-container">
                        <input
                            type="text"
                            value={inputValue}
                            onChange={(e) => setInputValue(e.target.value)}
                            onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}
                            placeholder="–ß—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?"
                            className="main-input"
                        />
                        <motion.button
                            className="send-message-btn"
                            onClick={handleSendMessage}
                            disabled={!inputValue.trim()}
                            whileHover={{scale: 1.05}}
                            whileTap={{scale: 0.95}}
                        >
                            <Send className="Send_icon"/>
                        </motion.button>
                    </div>
                </motion.div>

                <motion.div
                    className="quick-actions"
                    variants={itemAnimation}
                >
                    {quickActions.map((action, index) => {
                        const Icon = action.icon;
                        return (
                            <motion.button
                                key={index}
                                className="quick-action-btn"
                                onClick={() => handleQuickAction(action.action)}
                                whileHover={{scale: 1.05}}
                                whileTap={{scale: 0.95}}
                                initial={{opacity: 0, y: 20}}
                                animate={{opacity: 1, y: 0}}
                                transition={{delay: index * 0.1}}
                            >
                                <Icon className="quick-action-icon"/>
                                <span className="quick-action-label">{action.label}</span>
                            </motion.button>
                        );
                    })}
                </motion.div>

                <motion.div
                    className="chat-history"
                    variants={itemAnimation}
                >
                    {isLoading ? (
                        <LoadingSpinner/>
                    ) : (
                        <RecentChats onChatClick={handleChatClick}/>
                    )}
                </motion.div>
            </div>
        </motion.div>
    );
};

export default HomePage;