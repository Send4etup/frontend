// src/hooks/useBackendIntegration.js - –ù–û–í–´–ô –§–ê–ô–õ
import { useState, useEffect, useCallback } from 'react';
import { checkBackendHealth, authenticateUser } from '../services/backendAdapter';

export const useBackendIntegration = () => {
    const [backendStatus, setBackendStatus] = useState({
        isOnline: false,
        isChecking: true,
        lastCheck: null,
        error: null
    });

    const [user, setUser] = useState(null);
    const [isAuthenticating, setIsAuthenticating] = useState(false);

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±—ç–∫–µ–Ω–¥–∞
    const checkBackend = useCallback(async () => {
        setBackendStatus(prev => ({ ...prev, isChecking: true }));

        const result = await checkBackendHealth();

        setBackendStatus({
            isOnline: result.isOnline,
            isChecking: false,
            lastCheck: new Date(),
            error: result.error || null
        });

        return result.isOnline;
    }, []);

    // –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const authenticate = useCallback(async (telegramData = {}) => {
        setIsAuthenticating(true);

        try {
            const result = await authenticateUser(telegramData);

            if (result.success) {
                setUser(result.user);
                console.log(`üîê Authenticated via ${result.source}:`, result.user);
            }

            return result;
        } catch (error) {
            console.error('üîê Authentication error:', error);
            return { success: false, error: error.message };
        } finally {
            setIsAuthenticating(false);
        }
    }, []);

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    useEffect(() => {
        checkBackend();

        // –ü–æ–ø—ã—Ç–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ localStorage
        try {
            const savedUser = localStorage.getItem('user');
            if (savedUser) {
                setUser(JSON.parse(savedUser));
            }
        } catch (error) {
            console.warn('‚ö†Ô∏è Could not restore user from localStorage:', error);
        }
    }, [checkBackend]);

    // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±—ç–∫–µ–Ω–¥–∞
    useEffect(() => {
        const interval = setInterval(() => {
            if (backendStatus.isOnline) {
                checkBackend();
            }
        }, 30000); // –ö–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥

        return () => clearInterval(interval);
    }, [checkBackend, backendStatus.isOnline]);

    return {
        backendStatus,
        user,
        isAuthenticating,
        checkBackend,
        authenticate,
        isReady: !backendStatus.isChecking && (backendStatus.isOnline || user) // –ì–æ—Ç–æ–≤ –µ—Å–ª–∏ –±—ç–∫–µ–Ω–¥ –æ–Ω–ª–∞–π–Ω –ò–õ–ò –µ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    };
};
